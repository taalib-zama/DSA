Data Abstraction is the property by virtue of which only the essential details are displayed to the user.
Ex:A car is viewed as a car rather than its individual components.
Data Abstraction may also be defined as the process of identifying only the required characteristics of an object
* Consider a real-life example of a man driving a car. The man only knows that pressing the accelerators
will increase the car speed or applying brakes will stop the car, but he does not know how on pressing
the accelerator, the speed is actually increasing. He does not know about the inner mechanism of the
car or the implementation of the accelerators, brakes etc. in the car. This is what abstraction is.
==================================================================================================


Abstract classes and Abstract methods :

1. An abstract class is a class that is declared with an abstract keyword.
2. An abstract method is a method that is declared without implementation.
3. An abstract class may or may not have all abstract methods. Some of them can be concrete methods
4. A method-defined abstract must always be redefined in the subclass, thus making overriding compulsory
    or making the subclass itself abstract.
5. Any class that contains one or more abstract methods must also be declared with an abstract keyword.
6. There can be no object of an abstract class. That is, an abstract class can not be directly
    instantiated with the new operator.
An abstract class can have parameterized constructors and the default constructor is always present
in an abstract class.

====================================================================================================

There are situations in which we will want to define a superclass that declares the structure of a
given abstraction without providing a complete implementation of every method. Sometimes we will want
to create a superclass that only defines a generalization form that will be shared by all of its
subclasses, leaving it to each subclass to fill in the details.

Consider a classic “shape” example, perhaps used in a computer-aided design system or game simulation.
The base type is “shape” and each shape has a color, size, and so on. From this, specific types of
shapes are derived(inherited)-circle, square, triangle, and so on — each of which may have additional
characteristics and behaviors. For example, certain shapes can be flipped. Some behaviors may be
different, such as when you want to calculate the area of a shape. The type hierarchy embodies both
the similarities and differences between the shapes.

=====================================================================================================
Encapsulation vs Data Abstraction

Encapsulation is data hiding(information hiding) while Abstraction is detailed hiding(implementation hiding).
While encapsulation groups together data and methods that act upon the data, data abstraction deal
with exposing the interface to the user and hiding the details of implementation.
Encapsulated classes are java classes that follow data hiding and abstraction while
We can implement abstraction by using abstract classes and interfaces.Encapsulation is a procedure
that takes place at the implementation level, while abstraction is a design-level process.


Advantages of Abstraction

-It reduces the complexity of viewing things.
-Avoids code duplication and increases reusability.
-Helps to increase the security of an application or program as only essential details are provided to the user.
-It improves the maintainability of the application.
-It improves the modularity of the application.
-The enhancement will become very easy because without affecting end-users we can able to perform any type of changes in our internal system.
